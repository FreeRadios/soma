/* config.h.in.  Generated from configure.ac by autoheader.  */

/* floating-point amr_nb audio codec */
#undef AMR_NB

/* fixed-point amr_nb audio codec */
#undef AMR_NB_FIXED

/* floating-point amr_wb audio codec */
#undef AMR_WB

/* building for Alpha platform */
#undef ARCH_ALPHA

/* building for ARM platform */
#undef ARCH_ARMV4L

/* building for MIPS platform */
#undef ARCH_MIPS

/* building for PowerPC platform */
#undef ARCH_POWERPC

/* building for Sh4 platform */
#undef ARCH_SH4

/* building for Sparc platform */
#undef ARCH_SPARC

/* building for Sparc64 platform */
#undef ARCH_SPARC64

/* building for x86 platform */
#undef ARCH_X86

/* runtime liba52.so.0 resolving */
#undef CONFIG_A52BIN

/* Autodesk RLE decoder */
#undef CONFIG_AASC_DECODER

/* GPL A52 support via liba52 */
#undef CONFIG_AC3

/* AC-3 encoder */
#undef CONFIG_AC3_ENCODER

/* Apple Lossless Audio decoder */
#undef CONFIG_ALAC_DECODER

/* Asus Video v1 decoder */
#undef CONFIG_ASV1_DECODER

/* Asus Video v1 encoder */
#undef CONFIG_ASV1_ENCODER

/* Asus Video v2 decoder */
#undef CONFIG_ASV2_DECODER

/* Asus Video v2 encoder */
#undef CONFIG_ASV2_ENCODER

/* BeOS audio support */
#undef CONFIG_AUDIO_BEOS

/* OSS audio support */
#undef CONFIG_AUDIO_OSS

/* BSD/bktr support */
#undef CONFIG_BKTR

/* Cinepak Video decoder */
#undef CONFIG_CINEPAK_DECODER

/* Cirrus Logic AccuPak decoder */
#undef CONFIG_CLJR_DECODER

/* CYUV decoder */
#undef CONFIG_CYUV_DECODER

/* Building for Darwin */
#undef CONFIG_DARWIN

/* compilation of decoders */
#undef CONFIG_DECODERS

/* compilation of demuxers */
#undef CONFIG_DEMUXERS

/* DV IEEE1394 support */
#undef CONFIG_DV1394

/* Digital Video decoder */
#undef CONFIG_DVVIDEO_DECODER

/* Digital Video encoder */
#undef CONFIG_DVVIDEO_ENCODER

/* 8-BPS Video decoder */
#undef CONFIG_EIGHTBPS_DECODER

/* compilation of encoders */
#undef CONFIG_ENCODERS

/* faac support via libfaac */
#undef CONFIG_FAAC

/* faad support via libfaad */
#undef CONFIG_FAAD

/* runtime libfaad.so.0 resolving */
#undef CONFIG_FAADBIN

/* ffmpeg command line utility */
#undef CONFIG_FFMPEG

/* ffmpeg media server */
#undef CONFIG_FFSERVER

/* FFMpeg Video v1 decoder */
#undef CONFIG_FFV1_DECODER

/* FFMpeg Video v1 encoder */
#undef CONFIG_FFV1_ENCODER

/* FFMpeg Huffman Video decoder */
#undef CONFIG_FFVHUFF_DECODER

/* FFMpeg Huffman Video encoder */
#undef CONFIG_FFVHUFF_ENCODER

/* Free Lossless Audio decoder */
#undef CONFIG_FLAC_DECODER

/* FLI/FLV Animation decoder */
#undef CONFIG_FLIC_DECODER

/* FLV Video decoder */
#undef CONFIG_FLV_DECODER

/* FLV video encoder */
#undef CONFIG_FLV_ENCODER

/* 4xm Video decoder */
#undef CONFIG_FOURXM_DECODER

/* Lossless Fraps decoder */
#undef CONFIG_FRAPS_DECODER

/* h.261 decoder */
#undef CONFIG_H261_DECODER

/* h.261 encoder */
#undef CONFIG_H261_ENCODER

/* Intel h.263 decoder */
#undef CONFIG_H263I_DECODER

/* h.263+ encoder */
#undef CONFIG_H263P_ENCODER

/* h.263 decoder */
#undef CONFIG_H263_DECODER

/* h.263 encoder */
#undef CONFIG_H263_ENCODER

/* h.264 decoder */
#undef CONFIG_H264_DECODER

/* whether dlfcn.h is available */
#undef CONFIG_HAVE_DLFCN

/* whether dlopen is available */
#undef CONFIG_HAVE_DLOPEN

/* Huffyuv Lossless Video decoder */
#undef CONFIG_HUFFYUV_DECODER

/* Huffyuv Lossless Video encoder */
#undef CONFIG_HUFFYUV_ENCODER

/* ID Quake-II CIN Video decoder */
#undef CONFIG_IDCIN_DECODER

/* Intel Indeo v2 decoder */
#undef CONFIG_INDEO2_DECODER

/* Intel Indeo v3 decoder */
#undef CONFIG_INDEO3_DECODER

/* Interplay DPCM decoder */
#undef CONFIG_INTERPLAY_DPCM_DECODER

/* Interplay Video decoder */
#undef CONFIG_INTERPLAY_VIDEO_DECODER

/* Lossless JPEG encoder */
#undef CONFIG_LJPEG_ENCODER

/* LOCO decoder */
#undef CONFIG_LOCO_DECODER

/* MACE-3 decoder */
#undef CONFIG_MACE3_DECODER

/* MACE-6 decoder */
#undef CONFIG_MACE6_DECODER

/* PSX MDEC decoder */
#undef CONFIG_MDEC_DECODER

/* Motion-JPEG decoder */
#undef CONFIG_MJPEG_DECODER

/* Motion-JPEG encoder */
#undef CONFIG_MJPEG_ENCODER

/* MPEG-1 layer 1/2 decoder */
#undef CONFIG_MP2_DECODER

/* MPEG-1 layer 2 encoder */
#undef CONFIG_MP2_ENCODER

/* MPEG-1 layer 3 ADU decoder */
#undef CONFIG_MP3ADU_DECODER

/* mp3 encoding via libmp3lame */
#undef CONFIG_MP3LAME

/* MPEG-1 layer 3 On4 decoder */
#undef CONFIG_MP3ON4_DECODER

/* MPEG-1 layer 3 decoder */
#undef CONFIG_MP3_DECODER

/* MPEG-1 video decoder */
#undef CONFIG_MPEG1VIDEO_DECODER

/* MPEG-1 video encoder */
#undef CONFIG_MPEG1VIDEO_ENCODER

/* MPEG-2 video decoder */
#undef CONFIG_MPEG2VIDEO_DECODER

/* MPEG-2 video encoder */
#undef CONFIG_MPEG2VIDEO_ENCODER

/* MPEG-4 video decoder */
#undef CONFIG_MPEG4_DECODER

/* MPEG-4 video encoder */
#undef CONFIG_MPEG4_ENCODER

/* high-precision (slower) MPEG audio */
#undef CONFIG_MPEGAUDIO_HP

/* Motion-JPEG B decoder */
#undef CONFIG_MPEGB_DECODER

/* MPEG-1/2 video decoder */
#undef CONFIG_MPEGVIDEO_DECODER

/* Microsoft MPEG-4 v1 decoder */
#undef CONFIG_MSMPEG4V1_DECODER

/* Microsoft MPEG-4 v1 encoder */
#undef CONFIG_MSMPEG4V1_ENCODER

/* Microsoft MPEG-4 v2 decoder */
#undef CONFIG_MSMPEG4V2_DECODER

/* Microsoft MPEG-4 v2 encoder */
#undef CONFIG_MSMPEG4V2_ENCODER

/* Microsoft MPEG-4 v3 decoder */
#undef CONFIG_MSMPEG4V3_DECODER

/* Microsoft MPEG-4 v3 encoder */
#undef CONFIG_MSMPEG4V3_ENCODER

/* Microsoft RLE decoder */
#undef CONFIG_MSRLE_DECODER

/* Microsoft Video v1 decoder */
#undef CONFIG_MSVIDEO1_DECODER

/* MSZH Lossless Video decoder */
#undef CONFIG_MSZH_DECODER

/* compilation of muxers */
#undef CONFIG_MUXERS

/* rtp/http networking code */
#undef CONFIG_NETWORK

/* Building for OS/2 */
#undef CONFIG_OS2

/* PAM encoder */
#undef CONFIG_PAM_ENCODER

/* PBM encoder */
#undef CONFIG_PBM_ENCODER

/* PGMYUV encoder */
#undef CONFIG_PGMYUV_ENCODER

/* PGM encoder */
#undef CONFIG_PGM_ENCODER

/* Portable Network Graphics decoder */
#undef CONFIG_PNG_DECODER

/* Portable Network Graphics encoder */
#undef CONFIG_PNG_ENCODER

/* post-processing functions */
#undef CONFIG_PP

/* PPM encoder */
#undef CONFIG_PPM_ENCODER

/* Q-design Music 2 decoder */
#undef CONFIG_QDM2_DECODER

/* QuickDraw decoder */
#undef CONFIG_QDRAW_DECODER

/* Quicktime RLE decoder */
#undef CONFIG_QTRLE_DECODER

/* RealAudio 1.0 decoder */
#undef CONFIG_RA_144_DECODER

/* RealAudio 2.0 decoder */
#undef CONFIG_RA_288_DECODER

/* RoQ Video decoder */
#undef CONFIG_ROQ_DECODER

/* RoQ DPCM Audio decoder */
#undef CONFIG_ROQ_DPCM_DECODER

/* RPZA Video decoder */
#undef CONFIG_RPZA_DECODER

/* RealVideo 1.0 decoder */
#undef CONFIG_RV10_DECODER

/* RealVideo 1.0 encoder */
#undef CONFIG_RV10_ENCODER

/* RealVideo 2.0 decoder */
#undef CONFIG_RV20_DECODER

/* RealVideo 2.0 encoder */
#undef CONFIG_RV20_ENCODER

/* Shorten Lossless Audio decoder */
#undef CONFIG_SHORTEN_DECODER

/* Quicktime SMC Graphics decoder */
#undef CONFIG_SMC_DECODER

/* Snow Video decoder */
#undef CONFIG_SNOW_DECODER

/* Snow encoder */
#undef CONFIG_SNOW_ENCODER

/* Sol DPCM decoder */
#undef CONFIG_SOL_DPCM_DECODER

/* Sonic Audio decoder */
#undef CONFIG_SONIC_DECODER

/* Sonic Audio encoder */
#undef CONFIG_SONIC_ENCODER

/* Sonic Lossless Audio encoder */
#undef CONFIG_SONIC_LS_ENCODER

/* SP5X JPEG decoder */
#undef CONFIG_SP5X_DECODER

/* Building for SunOS */
#undef CONFIG_SUNOS

/* Sorensen Video v1 decoder */
#undef CONFIG_SVQ1_DECODER

/* Sorensen Video v1 encoder */
#undef CONFIG_SVQ1_ENCODER

/* Sorensen Video v3 decoder */
#undef CONFIG_SVQ3_DECODER

/* Theora decoder */
#undef CONFIG_THEORA_DECODER

/* TrueMotion-1 decoder */
#undef CONFIG_TRUEMOTION1_DECODER

/* TrueMotion-2 decoder */
#undef CONFIG_TRUEMOTION2_DECODER

/* TechSmith Camcasia decoder */
#undef CONFIG_TSCC_DECODER

/* UltiMotion Video decoder */
#undef CONFIG_ULTI_DECODER

/* Microsoft Video v9 decoder */
#undef CONFIG_VC9_DECODER

/* ATI VCR-1 decoder */
#undef CONFIG_VCR1_DECODER

/* video4linux support */
#undef CONFIG_VIDEO4LINUX

/* VMD Audio decoder */
#undef CONFIG_VMDAUDIO_DECODER

/* VMD Video decoder */
#undef CONFIG_VMDVIDEO_DECODER

/* vorbis support via libvorbis */
#undef CONFIG_VORBIS

/* Vorbis Audio decoder */
#undef CONFIG_VORBIS_DECODER

/* On2 VP-3 decoder */
#undef CONFIG_VP3_DECODER

/* Westwood VQA Video decoder */
#undef CONFIG_VQA_DECODER

/* Building for Win32 (cygwin/mingw32) */
#undef CONFIG_WIN32

/* Windows Media Audio v1 decoder */
#undef CONFIG_WMAV1_DECODER

/* Windows Media Audio v2 decoder */
#undef CONFIG_WMAV2_DECODER

/* Windows Media Video v1 decoder */
#undef CONFIG_WMV1_DECODER

/* Windows Media Video v1 encoder */
#undef CONFIG_WMV1_ENCODER

/* Windows Media Video v2 decoder */
#undef CONFIG_WMV2_DECODER

/* Windows Media Video v2 encoder */
#undef CONFIG_WMV2_ENCODER

/* Windows Media Video v3 decoder */
#undef CONFIG_WMV3_DECODER

/* Winnov v1 decoder */
#undef CONFIG_WNV1_DECODER

/* Westwood Sound-1 decoder */
#undef CONFIG_WS_SND1_DECODER

/* Xan DPCM decoder */
#undef CONFIG_XAN_DPCM_DECODER

/* Xan WC-3 decoder */
#undef CONFIG_XAN_WC3_DECODER

/* Miro Video XL decoder */
#undef CONFIG_XL_DECODER

/* use zlib for decompression */
#undef CONFIG_ZLIB

/* Lossless zlib Compression decoder */
#undef CONFIG_ZLIB_DECODER

/* Compression Library encoder */
#undef CONFIG_ZLIB_ENCODER

/* Emulate fast integer types */
#undef EMULATE_FAST_INT

/* Emulate inttypes.h if not available */
#undef EMULATE_INTTYPES

/* "ffmpeg configure options" */
#undef FFMPEG_CONFIGURATION

/* use Altivec optimizations */
#undef HAVE_ALTIVEC

/* altivec.h available */
#undef HAVE_ALTIVEC_H

/* Have built-in vector types */
#undef HAVE_BUILTIN_VECTOR

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* profiling with gprof */
#undef HAVE_GPROF

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* use ARM/IWMMXT optimizations */
#undef HAVE_IWMMXT

/* whether localtime_r() is available */
#undef HAVE_LOCALTIME_R

/* whether lrintf() is available */
#undef HAVE_LRINTF

/* whether malloc.h available */
#undef HAVE_MALLOC_H

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* support for Sun Media Lib */
#undef HAVE_MLIB

/* use MMI optimizations */
#undef HAVE_MMI

/* use MMX optimizations */
#undef HAVE_MMX

/* whether memalign() is available */
#undef HAVE_POSIX_MEMALIGN

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* video hooking plugins */
#undef HAVE_VHOOK

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* enable powerpc performance reporting */
#undef POWERPC_PERFORMANCE_REPORT

/* runtime libpostproc.so linking */
#undef SHARED_PP

/* simple IDCT routines */
#undef SIMPLE_IDCT

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Version number of package */
#undef VERSION

/* processor is big-endian */
#undef WORDS_BIGENDIAN

/* Number of bits in a file offset, on hosts where this is settable. */
#undef _FILE_OFFSET_BITS

/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# undef _GNU_SOURCE
#endif

/* Define for large files, on AIX-style hosts. */
#undef _LARGE_FILES

/* restrict keyword */
#undef restrict
